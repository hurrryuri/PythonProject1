#배열 : 하나의 변수에 여러개의 값을 저장
#리스트 []: 여러개의 변수를 하나의 변수로 저장(삽입, 수정, 삭제 가능)
#튜플 (): 여러개의 변수를 하나의 변수로 저장(삽입, 수정, 삭제 모두 불가)
#==> 값의 위치를 첨자지정 [위치], (위치)
#딕셔너리 : 변수명(키)과 값을 여러개 저장
# aa+1 +2 +3 =>기준으로부터 떨어진 위치
# 0  0  0  0 =>기준으로부터 떨어진 주소값(포인터) ->C언어
aa = [0,0,0,0] #aa리스트에 0,0,0,0 4개의 값을 저장
hap = 0 #합계를 저장할 변수(초기화)

aa[0] = int(input("첫번째 수를 입력하세요?")) #리스트의 첫번째 영역에 값을 저장
aa[1] = int(input("두번째 수를 입력하세요?")) #리스트의 두번째 영역에 값을 저장
aa[2] = int(input("세번째 수를 입력하세요?")) #리스트의 세번째 영역에 값을 저장
aa[3] = int(input("네번째 수를 입력하세요?")) #리스트의 네번째 영역에 값을 저장

hap = aa[0] + aa[1] + aa[2] +aa[3] #리스트에 각 위치의 값을 더해서 합을 구함
print("합계==>%d" %hap)

#리스트, 튜플, 딕셔너리는 값이 연속적으로 저장
#선언시 저장할 공간을 미리 확보
#이미 확보된 공간을 수동으로 절대 추가, 삽입, 삭제가 불가능
#주어진 함수를 이용해서 추가, 삽입, 삭제 시도

#리스트.append(값) : 해당 리스트에 값을 추가한다.
#리스트.extend([리스트]) : 해당 리스트에 다른 리스트(튜플)을 모두 추가한다.
#리스트.insert(위치, 값) : 해당 리스트에 값을 삽입한다.
#리스트.remove(값) : 해당 리스트에 지정한 값을 삭제한다.
#                   중복값이 존재하는 경우 첫번째 값이 삭제
#                   검색순서가 앞에서 뒤로
#리스트.pop(위치) : 해당 위치의 값을 읽고, 리스트에서 삭제
#                   검색순서가 뒤에서 앞으로
#리스트.clear() : 리스트의 모든 값을 제거
#리스트.index(값, [시작, 끝]) : 해당값을 읽기
#                   중복값이 존재하는 경우 첫번째 값이 삭제
#                   검색순서가 앞에서 뒤로
#                   시작, 끝 : 검색할 범위
#리스트.count(값) : 해당값의 존재개수
#리스트.sort([reverse=true]) : 오름차순(내림차순) 정렬
#리스트.reverse() : 리스트의 값을 역순으로 변경한다.
#                   [1,2,3]==>[3,2,1]
#리스트.copy() : 리스트를 복사
#join(리스트) : 리스트를 하나의 문자열로 만든다.
#               [1,2,3] => "123"
#list(튜플) : 리스트로 변환
#              (1,2,3) => [1,2,3]

bb=[] #bb를 리스트로 선언  a[] = new a[]
for i in range(0,100): #100회 반복
    bb.append(i) #값을 리스트에 추가
print(len(bb)) #리스트의 크기를 출력, bb.length()
print(bb)